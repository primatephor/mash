#summary FtpRunHarness implementation

= Introduction =

Invoke an ftp request (currently only GET, PUT, LS, DELETE are supported) against an ftp server.

= Configuration =
Configuration values:
 * 'url' = url of the resource
 * 'user' = user to login as
 * 'password' = password of user

= Parameter =
Parameters for ftping:
 * 'operation' = GET, PUT, LS, DELETE
 * 'ftp_params' = Any string to be applied to the corresponding ftp command.  For a put/get, it'd be filename, for a LS or DELETE, a path.
 * 'transfer_mode' = BINARY or ASCII
 * 'file_path' = for PUT, file to send.  for GET, where to save a file to.  You don't need to save a file for GET though, you can verify it's contents instead (just don't supply a 'file_path' for GET)

= Sample Usage =
{{{
    <Run type="org.mash.harness.ftp.FtpRunHarness">
        <Configuration name="url" property="my.url"/>
        <Configuration name="user"><Value>theuser</Value></Configuration>
        <Configuration name="password"><Value>password</Value></Configuration>
        <Parameter name="operation"><Value>GET</Value></Parameter>
        <Parameter name="ftp_params"><Value>file.txt</Value></Parameter>
    </Run>
    <Run type="org.mash.harness.ftp.StandardVerifyHarness">
        <Configuration name="contains"><Value>some file content</Value></Configuration>
    </Run>
}}}

Here a file named 'file.txt' is downloaded by user 'theuser'.  It's contents are then verified to contain 'some file content'.

To retrieve the file with a get and save it locally:
{{{
    <Run type="org.mash.harness.ftp.FtpRunHarness">
        <Configuration name="url" property="my.url"/>
        <Configuration name="user"><Value>theuser</Value></Configuration>
        <Configuration name="password"><Value>password</Value></Configuration>
        <Parameter name="operation"><Value>GET</Value></Parameter>
        <Parameter name="ftp_params"><Value>file.txt</Value></Parameter>
        <Parameter name="file_path"><Value>/tmp/my_local_file.txt</Value></Parameter>
    </Run>
}}}

Here the file is retrieved as before, but now it's saved to a file in /tmp called 'my_local_file.txt'.