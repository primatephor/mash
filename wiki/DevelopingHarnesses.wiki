#Basics of Developing a Harness

= Introduction =

Each harness has it's own specific interface to implement (setup, run, verify, teardown).  However there are common themes for developing a harness that simplify the plumbing.


= BaseHarness =

Extending the {{{BaseHarness}}} implements many of the methods in the {{{Harness}}} interface.  It is advised to use this class to simplify your harness, however if there is special functionality you need you can implement these methods on your own.

= Configuration = 
There are two ways of getting configurations into your harness.  One is to parse the {{{Configuration}}} list manually and selectively apply them to your harness.  

Another (simpler) way of getting configuration data is to use the {{{@HarnessConfiguration}}} annotation.  Add this annotation to the method you want invoked with the appropriate {{{<Configuration>}}} element.  The 'name' parameter on the {{{@HarnessConfiguration}}} annotation is the name of the {{{<Configuration>}}} element.

= Parameter =
Parameters are configured just like configurations, so you may either parse the parameter list or use the {{{@HarnessParameter}}} annotation.  Again, with the {{{@HarnessParameter}}} the 'name' parameter is the name of the {{{<Parameter>}}} element.
