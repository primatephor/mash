#summary The current list of harnesses
#labels Featured

= Introduction =

This is the list of supplied harnesses.  To build your own, check out DevelopingHarnesses.


= Relational DB =
 * {{{mash-dbharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| [DBSetupHarness] || db || uses dbunit, runs sql ||
|| [DBWaitHarness] || db_wait || wait for a particular state in the db ||
|| [RowRunHarness] || db_row || runs a 'select `*`' on a table ||
|| [SQLRunHarness] || sql || run any sql ||

= HBase DB =
 * {{{mash-dbharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| [CreateTable] || hbase_create || creates hbase table ||
|| [InsertRow] || hbase_insert || insert hbase row ||
|| [DeleteTable] || hbase_delete || remove hbase table ||
|| [ScanTable] || hbase_scan || scan an hbase table for relevant rows / columns ||
|| [ValueFilterScanTable] || hbase_value_scan || filter a scan result ||
|| [UpdateRows] || hbase_update || scan table for row, apply update ||

= File =
 * {{{mash-fileharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| [FileGetHarness] ||| get_file || retrieve a file ||
|| [FileListHarness] ||| list_file || list files ||
|| [FileDeleteHarness] || delete_file || remove file ||
|| [FileCopyHarness] || copy_file || copy a file from source to target ||
|| [FileWaitHarness] || file_wait || wait for a file to get written ||
|| [FileVerifyHarness] || file || compare contents of a file ||

= Ftp =
 * {{{mash_ftpharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| [FtpRunHarness FTPRunHarness] || ftp || invokes ftp requests ||
|| GetHarness || get_ftp || gets a file ||
|| ListHarness || list_ftp || lists files ||
|| PutHarness || put_ftp || puts a file on a server ||
|| DeleteHarness || delete_ftp || removes a directory or file ||
|| [FtpVerifyListHarness FTPVerifyListHarness] || list_ftp || used by ListHarness, verifies files are present ||
|| [FtpWaitHarness FTPWaitHarness] || wait_ftp || wait for a file to be there ||

= Http =
 * {{{mash_httpharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| HttpRunHarness || http || invokes http requests ||
|| HttpVerifyHarness || http || verify response (title, etc) ||

= Email =
 * {{{mash_mailharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| [GetIMAPEmail GetEmail] || email || email client for retrieving messages ||
|| [IMAPSetupHarness EmailSetupHarness] || email || cleaning out an inbox before testing ||
|| [EmailVerifyHarness] || email || verify email (subject, count, recipient, etc) ||

= REST =
 * {{{mash_httpharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| RestRunHarness || rest || invokes http requests in a restful manner.  Uses RestResponse for xpath ||

= Messaging =
 * {{{mash_messageharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| [XmlJMSHarness] || xml_jms || send and receive xml files on JMS queue ||
|| [TextJMSHarness] || text_jms || send and receive text files on JMS queue ||
|| [ObjectJMSHarness] || object_jms || receive Java objects from JMS queue ||
|| [JMSSetupHarness] || jms || clean a queue ||

= Core =
 * {{{mash_core.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| StandardVerifyHarness || standard || standard response validation ||
|| ListVerifyHarness || list || verify lists, retrieve specific elements to verify ||

= Utilities =
 * {{{mash_utilityharness.jar}}}
|| *Harness* || *type attribute* || *Description* ||
|| TimedWaitRunHarness || wait || wait some amount of time ||
|| CommandExecutorHarness || cli || execute a command on command line ||
|| CommandExecuterVerifyHarness || verify_cli || verify the output of a command ||

= Teardown =
no teardown implementations yet