#summary The current list of harnesses
#labels Featured

= Introduction =

This is the list of supplied harnesses.  To build your own, check out DevelopingHarnesses.


= DB =
 * {{{DBHarness.jar}}}
  * [DBSetupHarness] (uses dbunit, runs sql)
  * [DBRunHarness] (runs a 'select `*`' on a table)

= Ftp =
 * {{{FtpHarness.jar}}}
  * [FtpRunHarness FTPRunHarness] (invokes ftp requests)
  * GetHarness (gets a file)
  * ListHarness (lists files)
  * PutHarness (puts a file on a server)
  * DeleteHarness (removes a directory or file)
  * [FtpVerifyListHarness FTPVerifyListHarness] (used by ListHarness, verifies files are present)
  * [FtpWaitHarness FTPWaitHarness] (wait for a file to be there)
   * check path (file or directory) and wait until it exists

= Http =
 * {{{HttpHarness.jar}}}
  * HttpRunHarness (invokes http requests)
  * HttpVerifyHarness

= Email =
 * {{{MailHarness.jar}}}
  * GetIMAPEmail (email client for retrieving messages)
  * IMAPSetupHarness (cleaning out an inbox before testing)

= REST =
 * {{{HttpHarness.jar}}}
  * RestRunHarness (invokes http requests in a restful manner)
  * RestResponse (for running xpath queries)

= Messaging =
 * {{{MessageHarness.jar}}}
  * [XmlJMSHarness] (send and receive xml files on JMS queue)
  * [TextJMSHarness] (send and receive text files on JMS queue)
  * [ObjectJMSHarness] (receive Java objects from JMS queue)
  * [JMSSetupHarness] (clean a queue)

= Core =
 * {{{mash.jar}}}
  * StandardVerifyHarness
  * ListVerifyHarness

= Utilities =
 * {{{UtilityHarness.jar}}}
  * TimedWaitRunHarness

= Teardown =